
<div id="list_module_api_docs" class="module_api_docs">
<h1>list</h1>
<div class="module_description"><!-- contributed by Irakli Gozalishvili [gozala@mozilla.com]  -->

<p>The <code>"list"</code> module provides base building blocks for composing lists.</p>
</div>

<div class="api_reference">
<h2 class="api_header">API Reference</h2>

<div class="api_component_group">
<h3 class="api_header">Classes</h3>

<div class="api_component">
<h4 class="api_name">Iterable</h4>
<p>Base trait that can be used to compose traits with non-standard
enumeration behaviors.</p>
<p>This trait is supposed to be used as part of a composition, since it only
provides custom enumeration behavior to a composed object.
It defines one required <code>_keyValueMap</code> property, that is used as a hash of
"key-values" to iterate on during enumeration.</p>
<div class="api_component_group">
<h5 class="api_header">Constructors</h5>

<div class="api_component">
<h6 class="api_name">Iterable()</h6>
<p>Constructs an <code>Iterable</code> object.</p>
</div>

</div>

<div class="api_component_group">
<h5 class="api_header">Properties</h5>

<div class="api_component">
<h6 class="api_name">_keyValueMap : <span class="datatype">Object</span></h6>
<p>Hash map of key-values to iterate over. <em>Required</em> property: that is, the
property must be supplied by objects that compose this trait.
<em>Note: That this property can be a getter if you need dynamic behavior.</em></p>
</div>

</div>

</div>

<div class="api_component">
<h4 class="api_name">List</h4>
<p>An ordered collection (also known as a sequence) disallowing duplicate
elements. List is composed out of <code>Iterable</code>, therefore it provides custom
enumeration behavior that is similar to array (enumerates only on the
elements of the list).</p>
<p>List is a base trait and is meant to be part of a
composition, since all of its API is private except for the <code>length</code> property.</p>
<p><strong>Examples:</strong></p>
<pre><code>var MyList = List.compose({
  add: function add(item1, item2, /*item3...*/) {
    Array.slice(arguments).forEach(this._add.bind(this));
  },
  remove: function remove(item1, item2, /*item3...*/) {
    Array.slice(arguments).forEach(this._remove.bind(this));
  }
});
MyList('foo', 'bar', 'baz').length == 3;        // true
new MyList('new', 'keyword').length == 2;       // true
MyList.apply(null, [1, 2, 3]).length == 3;      // true
let list = MyList();
list.length == 0;                               // true
list.add(1, 2, 3) == 3;                         // true
</code></pre>
<div class="api_component_group">
<h5 class="api_header">Constructors</h5>

<div class="api_component">
<h6 class="api_name">List(element1, element2, ...)</h6>
<p>Constructor can takes any number of elements and creates an instance of
<code>List</code> populated with the specified elements.</p>
<div class="parameter_set">
<div class="api_component">
<div class="api_name">[ element1 : <span class="datatype">Object|String|Number</span> ]</div>

</div>

<div class="api_component">
<div class="api_name">[ element2 : <span class="datatype">Object|String|Number</span> ]</div>

</div>

<div class="api_component">
<div class="api_name">[ ... : <span class="datatype">Object|String|Number</span> ]</div>

</div>

</div>

</div>

</div>

<div class="api_component_group">
<h5 class="api_header">Methods</h5>

<div class="api_component">
<h6 class="api_name">_has(element)</h6>

<div class="parameter_set">
<div class="api_component">
<div class="api_name">element : <span class="datatype">Object|Number|String</span></div>
<p>Returns <code>true</code> if this list contains the specified <code>element</code>.</p>
</div>

</div>

</div>

<div class="api_component">
<h6 class="api_name">_add(element)</h6>

<div class="parameter_set">
<div class="api_component">
<div class="api_name">element : <span class="datatype">Object|Number|String</span></div>
<p>Appends the specified <code>element</code> to the end of this list, if it doesn't
contain it.</p>
<p><em>Ignores the call if <code>element</code> is already contained.</em></p>
</div>

</div>

</div>

<div class="api_component">
<h6 class="api_name">_remove(element)</h6>

<div class="parameter_set">
<div class="api_component">
<div class="api_name">element : <span class="datatype">Object|Number|String</span></div>
<p>Removes specified <code>element</code> from this list, if it contains it.</p>
<p><em>Ignores the call if <code>element</code> is not contained.</em></p>
</div>

</div>

</div>

<div class="api_component">
<h6 class="api_name">_clear()</h6>
<p>Removes all of the elements from this list.</p>
</div>

</div>

<div class="api_component_group">
<h5 class="api_header">Properties</h5>

<div class="api_component">
<h6 class="api_name">length : <span class="datatype">Number</span></h6>
<p>Number of elements in this list.</p>
</div>

</div>

</div>

</div>

</div>

</div>


<div id="match-pattern_module_api_docs" class="module_api_docs">
<h1>match-pattern</h1>
<div class="module_description"><p>The <code>match-pattern</code> module can be used to test strings containing URLs
against simple patterns.</p>
<h2>Specifying Patterns</h2>
<p>There are three ways you can specify patterns:</p>
<ul>
<li>as an exact match string</li>
<li>using a wildcard in a string</li>
<li>using a regular expression</li>
</ul>
<h3>Exact Matches</h3>
<p><strong>A URL</strong> matches only that URL. The URL must start with a scheme, end with a
slash, and contain no wildcards.</p>
<table>

<colgroup>
    <col width="30%">
    <col width="35%">
    <col width="35%">
  </colgroup>

<tr>
    <th>Example pattern</th>
    <th>Example matching URLs</th>
    <th>Example non-matching URLs</th>
  </tr>

<tr>
    <td><code>"http://example.com/"</code></td>
    <td><code>http://example.com/</code></td>
    <td><code>http://example.com</code><br>
        <code>http://example.com/foo</code><br>
        <code>https://example.com/</code><br>
        <code>http://foo.example.com/</code></td>
  </tr>

</table>

<h3>Wildcards</h3>
<p><strong>A single asterisk</strong> matches any URL with an <code>http</code>, <code>https</code>, or <code>ftp</code>
scheme. For other schemes like <code>file</code>, use a scheme followed by an
asterisk, as below.</p>
<table>

<colgroup>
    <col width="30%">
    <col width="35%">
    <col width="35%">
  </colgroup>

<tr>
    <th>Example pattern</th>
    <th>Example matching URLs</th>
    <th>Example non-matching URLs</th>
  </tr>

<tr>
    <td><code>"*"</code></td>
    <td><code>http://example.com/</code><br>
        <code>https://example.com/</code><br>
        <code>ftp://example.com/</code><br>
        <code>http://bar.com/foo.js</code><br>
        <code>http://foo.com/</code></td>
    <td><code>file://example.js</code></td>
  </tr>

</table>

<p><strong>A domain name prefixed with an asterisk and dot</strong> matches any URL of that
domain or a subdomain, using any of <code>http</code>, <code>https</code>, <code>ftp</code>.</p>
<table>

<colgroup>
    <col width="30%">
    <col width="35%">
    <col width="35%">
  </colgroup>

<tr>
    <th>Example pattern</th>
    <th>Example matching URLs</th>
    <th>Example non-matching URLs</th>
  </tr>

<tr>
    <td><code>"*.example.com"</code></td>
    <td><code>http://example.com/</code><br>
        <code>http://foo.example.com/</code><br>
        <code>https://example.com/</code><br>
        <code>http://example.com/foo</code><br>
        <code>ftp://foo.example.com/</code></td>
    <td><code>ldap://example.com</code><br>
        <code>http://example.foo.com/</code></td>
  </tr>

</table>

<p><strong>A URL followed by an asterisk</strong> matches that URL and any URL prefixed with
the pattern.</p>
<table>

<colgroup>
    <col width="30%">
    <col width="35%">
    <col width="35%">
  </colgroup>

<tr>
    <th>Example pattern</th>
    <th>Example matching URLs</th>
    <th>Example non-matching URLs</th>
  </tr>

<tr>
    <td><code>"https://foo.com/*"</code></td>
    <td><code>https://foo.com/</code><br>
        <code>https://foo.com/bar</code></td>
    <td><code>http://foo.com/</code><br>
        <code>https://foo.com</code><br>
        <code>https://bar.foo.com/</code></td>
  </tr>

</table>

<p><strong>A scheme followed by an asterisk</strong> matches all URLs with that scheme. To
match local files, use <code>file://*</code>.</p>
<table>

<colgroup>
    <col width="30%">
    <col width="70%">
  </colgroup>

<tr>
    <th>Example pattern</th>
    <th>Example matching URLs</th>
  </tr>

<tr>
    <td><code>"file://*"</code></td>
    <td><code>file://C:/file.html</code><br>
        <code>file:///home/file.png</code></td>
  </tr>

</table>

<h3>Regular Expressions</h3>
<p>You can specify patterns using a
<a href="https://developer.mozilla.org/en/JavaScript/Guide/Regular_Expressions">regular expression</a>:</p>
<pre><code>var { MatchPattern } = require("match-pattern");
var pattern = new MatchPattern(/.*example.*/);
</code></pre>
<p>The regular expression is subject to restrictions based on those applied to the
<a href="http://dev.w3.org/html5/spec/common-input-element-attributes.html#attr-input-pattern">HTML5 pattern attribute</a>. In particular:</p>
<ul>
<li>
<p>The pattern must match the entire value, not just any subset. For example, the
pattern <code>/moz.*/</code> will not match the URL <code>http://mozilla.org</code>.</p>
</li>
<li>
<p>The expression is compiled with the <code>global</code>, <code>ignoreCase</code>, and <code>multiline</code> flags
  disabled. The <code>MatchPattern</code> constructor will throw an exception
  if you try to set any of these flags.</p>
</li>
</ul>
<table>

<colgroup>
    <col width="30%">
    <col width="35%">
    <col width="35%">
  </colgroup>

<tr>
    <th>Example pattern</th>
    <th>Example matching URLs</th>
    <th>Example non-matching URLs</th>
  </tr>

<tr>
    <td><code>/.*moz.*/</code></td>
    <td><code>http://foo.mozilla.org/</code><br>
        <code>http://mozilla.org</code><br>
        <code>https://mozilla.org</code><br>
        <code>http://foo.com/mozilla</code><br>
        <code>http://hemozoon.org</code><br>
        <code>mozscheme://foo.org</code><br></td>
    <td><code>http://foo.org</code><br>
  </tr>

<tr>
    <td><code>/http:\/\/moz.*/</code></td>
    <td><code>http://mozilla.org</code><br>
        <code>http://mozzarella.com</code></td>
    <td><code>https://mozilla.org</code><br>
        <code>http://foo.mozilla.org/</code><br>
        <code>http://foo.com/moz</code></td>
  </tr>

<tr>
    <td><code>/http.*moz.*/</code><br></td>
    <td><code>http://foo.mozilla.org/</code><br>
        <code>http://mozilla.org</code><br>
        <code>http://hemozoon.org/</code></td>
        <td><code>ftp://http/mozilla.org</code></td>
  </tr>

</table>

<h2>Examples</h2>
<pre><code>var { MatchPattern } = require("match-pattern");
var pattern = new MatchPattern("http://example.com/*");
console.log(pattern.test("http://example.com/"));       // true
console.log(pattern.test("http://example.com/foo"));    // true
console.log(pattern.test("http://foo.com/"));           // false!
</code></pre>
</div>

<div class="api_reference">
<h2 class="api_header">API Reference</h2>

<div class="api_component_group">
<h3 class="api_header">Classes</h3>

<div class="api_component">
<h4 class="api_name">MatchPattern</h4>

<div class="api_component_group">
<h5 class="api_header">Constructors</h5>

<div class="api_component">
<h6 class="api_name">MatchPattern(pattern)</h6>
<p>This constructor creates match pattern objects that can be used to test URLs.</p>
<div class="parameter_set">
<div class="api_component">
<div class="api_name">pattern : <span class="datatype">string</span></div>
<p>The pattern to use.  See Patterns above.</p>
</div>

</div>

</div>

</div>

<div class="api_component_group">
<h5 class="api_header">Methods</h5>

<div class="api_component">
<h6 class="api_name">test(url)</h6>
<p>Tests a URL against the match pattern.</p>
<div class="parameter_set">
<div class="api_component">
<div class="api_name">url : <span class="datatype">string</span></div>
<p>The URL to test.</p>
</div>

</div>

<div class="returns">Returns: <span class="datatype">boolean</span><p>True if the URL matches the pattern and false otherwise.</p>
</div>

</div>

</div>

</div>

</div>

</div>

</div>

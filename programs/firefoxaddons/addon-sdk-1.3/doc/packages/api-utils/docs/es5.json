[["version", 4], ["markdown", "The `es5` module provides shim layer to a versions of Firefox that do not yet\nimplement certain EcmaScript 5 features.\n\nFor more information on EcmaScript 5:\n\n* The new APIs are described in the official [ES5 specification][].\n* A good [introduction][] to the new APIs by John Resig.\n* A Google tech talk on [changes to JavaScript][].\n\n**There is no need to `require` this module** since it gets preloaded into\nall sandboxes automatically.\n\nUsage of new ES5 API's is encouraged, but since not everything can be\nprovided to all the versions of firefox, there are few things to be aware of:\n\n`Object.freeze`, `Object.seal`, `Object.preventExtensions` does not really\nprevents any mutations. One thing it guarantees though, `Object.isFrozen`,\n`Object.isSealed`, `Object.isExtensible` checks will behave as defined in\nspecification.\n\n`Object.defineProperty` is only partially compliant with the specification:\n\n- Non configurable properties will be created as configurable ones.\n\n- Instead of non-writable properties getters and setters will be defined,\nbut `Object.getOwnPropertyDescriptor` will still behave as expected\n(will return property descriptor for non-writable property not a getter)\n\n- Defining properties using ES5 functions will break your\n     [custom iterators][] if you have any. Think twice before employing\n     custom iterators, because in most cases you can just make properties\n     non enumerable. If you really need to have a custom iterator, add it\n     after running ES5 functions and don't ignore previous iterators.\n     For example:\n\n         let object = Object.create({}, {\n           myField: { value: 6 }\n         });\n         object.__iterator__ = (function(original) {\n           return function myIterator() {\n             this.__iterator__ = original;\n             for (let key in this) {\n               // your logic here\n             }\n             this.__iterator__ = myIterator;\n           }\n         })(object.__iterator__);\n\n[custom iterators]:https://developer.mozilla.org/en/New_in_JavaScript_1.7#Iterators\n[ES5 specification]:http://www.ecmascript.org/docs/tc39-2009-043.pdf\n[introduction]:http://ejohn.org/blog/ecmascript-5-objects-and-properties/\n[changes to JavaScript]:http://www.youtube.com/watch?v=Kq4FpMe6cRs\n"]]
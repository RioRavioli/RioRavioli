[["version", 4], ["markdown", "The `match-pattern` module can be used to test strings containing URLs\nagainst simple patterns.\n\n## Specifying Patterns ##\n\nThere are three ways you can specify patterns:\n\n* as an exact match string\n* using a wildcard in a string\n* using a regular expression\n\n### Exact Matches ###\n\n**A URL** matches only that URL. The URL must start with a scheme, end with a\nslash, and contain no wildcards.\n\n<table>\n\n  <colgroup>\n    <col width=\"30%\">\n    <col width=\"35%\">\n    <col width=\"35%\">\n  </colgroup>\n\n  <tr>\n    <th>Example pattern</th>\n    <th>Example matching URLs</th>\n    <th>Example non-matching URLs</th>\n  </tr>\n\n  <tr>\n    <td><code>\"http://example.com/\"</code></td>\n    <td><code>http://example.com/</code></td>\n    <td><code>http://example.com</code><br>\n        <code>http://example.com/foo</code><br>\n        <code>https://example.com/</code><br>\n        <code>http://foo.example.com/</code></td>\n  </tr>\n\n</table>\n\n### Wildcards ###\n\n**A single asterisk** matches any URL with an `http`, `https`, or `ftp`\nscheme. For other schemes like `file`, use a scheme followed by an\nasterisk, as below.\n\n<table>\n\n  <colgroup>\n    <col width=\"30%\">\n    <col width=\"35%\">\n    <col width=\"35%\">\n  </colgroup>\n\n  <tr>\n    <th>Example pattern</th>\n    <th>Example matching URLs</th>\n    <th>Example non-matching URLs</th>\n  </tr>\n\n  <tr>\n    <td><code>\"*\"</code></td>\n    <td><code>http://example.com/</code><br>\n        <code>https://example.com/</code><br>\n        <code>ftp://example.com/</code><br>\n        <code>http://bar.com/foo.js</code><br>\n        <code>http://foo.com/</code></td>\n    <td><code>file://example.js</code></td>\n  </tr>\n\n</table>\n\n**A domain name prefixed with an asterisk and dot** matches any URL of that\ndomain or a subdomain, using any of `http`, `https`, `ftp`.\n\n<table>\n\n  <colgroup>\n    <col width=\"30%\">\n    <col width=\"35%\">\n    <col width=\"35%\">\n  </colgroup>\n\n  <tr>\n    <th>Example pattern</th>\n    <th>Example matching URLs</th>\n    <th>Example non-matching URLs</th>\n  </tr>\n\n  <tr>\n    <td><code>\"*.example.com\"</code></td>\n    <td><code>http://example.com/</code><br>\n        <code>http://foo.example.com/</code><br>\n        <code>https://example.com/</code><br>\n        <code>http://example.com/foo</code><br>\n        <code>ftp://foo.example.com/</code></td>\n    <td><code>ldap://example.com</code><br>\n        <code>http://example.foo.com/</code></td>\n  </tr>\n\n</table>\n\n**A URL followed by an asterisk** matches that URL and any URL prefixed with\nthe pattern.\n\n<table>\n\n  <colgroup>\n    <col width=\"30%\">\n    <col width=\"35%\">\n    <col width=\"35%\">\n  </colgroup>\n\n  <tr>\n    <th>Example pattern</th>\n    <th>Example matching URLs</th>\n    <th>Example non-matching URLs</th>\n  </tr>\n\n  <tr>\n    <td><code>\"https://foo.com/*\"</code></td>\n    <td><code>https://foo.com/</code><br>\n        <code>https://foo.com/bar</code></td>\n    <td><code>http://foo.com/</code><br>\n        <code>https://foo.com</code><br>\n        <code>https://bar.foo.com/</code></td>\n  </tr>\n\n</table>\n\n**A scheme followed by an asterisk** matches all URLs with that scheme. To\nmatch local files, use `file://*`.\n\n<table>\n\n  <colgroup>\n    <col width=\"30%\">\n    <col width=\"70%\">\n  </colgroup>\n\n  <tr>\n    <th>Example pattern</th>\n    <th>Example matching URLs</th>\n  </tr>\n\n  <tr>\n    <td><code>\"file://*\"</code></td>\n    <td><code>file://C:/file.html</code><br>\n        <code>file:///home/file.png</code></td>\n  </tr>\n\n</table>\n\n### Regular Expressions ###\n\nYou can specify patterns using a\n[regular expression](https://developer.mozilla.org/en/JavaScript/Guide/Regular_Expressions):\n\n    var { MatchPattern } = require(\"match-pattern\");\n    var pattern = new MatchPattern(/.*example.*/);\n\nThe regular expression is subject to restrictions based on those applied to the\n[HTML5 pattern attribute](http://dev.w3.org/html5/spec/common-input-element-attributes.html#attr-input-pattern). In particular:\n\n* The pattern must match the entire value, not just any subset. For example, the\npattern `/moz.*/` will not match the URL `http://mozilla.org`.\n\n* The expression is compiled with the `global`, `ignoreCase`, and `multiline` flags\n  disabled. The `MatchPattern` constructor will throw an exception\n  if you try to set any of these flags.\n\n<table>\n\n  <colgroup>\n    <col width=\"30%\">\n    <col width=\"35%\">\n    <col width=\"35%\">\n  </colgroup>\n\n  <tr>\n    <th>Example pattern</th>\n    <th>Example matching URLs</th>\n    <th>Example non-matching URLs</th>\n  </tr>\n\n  <tr>\n    <td><code>/.*moz.*/</code></td>\n    <td><code>http://foo.mozilla.org/</code><br>\n        <code>http://mozilla.org</code><br>\n        <code>https://mozilla.org</code><br>\n        <code>http://foo.com/mozilla</code><br>\n        <code>http://hemozoon.org</code><br>\n        <code>mozscheme://foo.org</code><br></td>\n    <td><code>http://foo.org</code><br>\n  </tr>\n\n  <tr>\n    <td><code>/http:\\/\\/moz.*/</code></td>\n    <td><code>http://mozilla.org</code><br>\n        <code>http://mozzarella.com</code></td>\n    <td><code>https://mozilla.org</code><br>\n        <code>http://foo.mozilla.org/</code><br>\n        <code>http://foo.com/moz</code></td>\n  </tr>\n\n  <tr>\n    <td><code>/http.*moz.*/</code><br></td>\n    <td><code>http://foo.mozilla.org/</code><br>\n        <code>http://mozilla.org</code><br>\n        <code>http://hemozoon.org/</code></td>\n        <td><code>ftp://http/mozilla.org</code></td>\n  </tr>\n\n</table>\n\n## Examples ##\n\n    var { MatchPattern } = require(\"match-pattern\");\n    var pattern = new MatchPattern(\"http://example.com/*\");\n    console.log(pattern.test(\"http://example.com/\"));       // true\n    console.log(pattern.test(\"http://example.com/foo\"));    // true\n    console.log(pattern.test(\"http://foo.com/\"));           // false!\n\n"], ["api-json", {"line_number": 225, "methods": [{"line_number": 234, "name": "test", "returns": {"datatype": "boolean", "line_number": 239, "description": "True if the URL matches the pattern and false otherwise."}, "params": [{"datatype": "string", "line_number": 237, "required": true, "name": "url", "description": "The URL to test."}], "signature": "test(url)", "type": "method", "description": "Tests a URL against the match pattern."}], "description": "", "constructors": [{"line_number": 227, "name": "MatchPattern", "params": [{"datatype": "string", "line_number": 230, "required": true, "name": "pattern", "description": "The pattern to use.  See Patterns above."}], "signature": "MatchPattern(pattern)", "type": "constructor", "description": "This constructor creates match pattern objects that can be used to test URLs."}], "type": "class", "name": "MatchPattern"}], ["markdown", "\n"]]
[["version", 4], ["markdown", "<!-- contributed by Irakli Gozalishvili [gozala@mozilla.com] -->\n\nLoader is base trait and it provides set of core properties and associated\nvalidations. Trait is useful for all the compositions providing high level\nAPIs for creating JavaScript contexts that can access web content.\n\nLoader is composed from the\n[EventEmitter](packages/api-utils/docs/events.html) trait, therefore\ninstances of Loader and their descendants expose all the public properties\nexposed by EventEmitter along with additional public properties:\n\nValue changes on all of the above mentioned properties emit `propertyChange`\nevents on an instances.\n\n**Example:**\n\nThe following code creates a wrapper on hidden frame that reloads a web page\nin frame every time `contentURL` property is changed:\n\n    var hiddenFrames = require(\"hidden-frame\");\n    var { Loader } = require(\"content\");\n    var PageLoader = Loader.compose({\n      constructor: function PageLoader(options) {\n        options = options || {};\n        if (options.contentURL)\n          this.contentURL = options.contentURL;\n        this.on('propertyChange', this._onChange = this._onChange.bind(this));\n        let self = this;\n        hiddenFrames.add(hiddenFrames.HiddenFrame({\n          onReady: function onReady() {\n            let frame = self._frame = this.element;\n            self._emit('propertyChange', { contentURL: self.contentURL });\n          }\n        }));\n      },\n      _onChange: function _onChange(e) {\n        if ('contentURL' in e)\n          this._frame.setAttribute('src', this._contentURL);\n      }\n    });\n\n"], ["api-json", {"line_number": 42, "properties": [{"datatype": "array", "line_number": 44, "type": "property", "name": "contentScriptFile", "description": "The local file URLs of content scripts to load.  Content scripts specified by\nthis property are loaded *before* those specified by the `contentScript`\nproperty."}, {"datatype": "array", "line_number": 51, "type": "property", "name": "contentScript", "description": "The texts of content scripts to load.  Content scripts specified by this\nproperty are loaded *after* those specified by the `contentScriptFile` property."}, {"datatype": "string", "line_number": 57, "type": "property", "name": "contentScriptWhen", "description": "When to load the content scripts. This may take one of the following\nvalues:\n\n* \"start\": load content scripts immediately after the document\nelement for the page is inserted into the DOM, but before the DOM content\nitself has been loaded\n* \"ready\": load content scripts once DOM content has been loaded,\ncorresponding to the\n[DOMContentLoaded](https://developer.mozilla.org/en/Gecko-Specific_DOM_Events)\nevent\n* \"end\": load content scripts once all the content (DOM, JS, CSS,\nimages) for the page has been loaded, at the time the\n[window.onload event](https://developer.mozilla.org/en/DOM/window.onload)\nfires\n"}, {"datatype": "string", "line_number": 76, "type": "property", "name": "contentURL", "description": "The URL of the content loaded."}, {"line_number": 81, "name": "allow", "datatype": "object", "props": [{"datatype": "boolean", "line_number": 84, "required": true, "name": "script", "description": "Whether or not to execute script in the content.  Defaults to true."}], "type": "property", "description": "Permissions for the content, with the following keys:"}], "type": "class", "name": "Loader", "description": "\n\n\n"}], ["markdown", "\n\n"]]
[["version", 4], ["markdown", "<!-- contributed by Irakli Gozalishvili [gozala@mozilla.com] -->\n\nThis module exports the `Worker` trait, which may be used to construct objects\nimplementing the [Worker][] interface defined by the W3C, with minor\ndifferences.\n\nContent workers are message-passing facilities for communication between\n[content scripts](dev-guide/addon-development/web-content.html) and the main\nadd-on code.\n\nIt is important to note that unlike \"web workers,\" these workers run in the\nsame process as web content and browser chrome, so code within workers can\nblock the UI.\n\n[Worker]:http://www.w3.org/TR/workers/#worker\n\n"], ["api-json", {"line_number": 17, "name": "Worker", "constructors": [{"line_number": 41, "name": "Worker", "params": [{"line_number": 44, "name": "options", "datatype": "object", "required": true, "props": [{"datatype": "object", "line_number": 46, "required": true, "name": "window", "description": "The content window to create JavaScript sandbox for communication with."}, {"datatype": "string,array", "line_number": 48, "required": false, "name": "contentScriptFile", "description": "The local file URLs of content scripts to load.  Content scripts specified\nby this option are loaded *before* those specified by the `contentScript`\noption. Optional."}, {"datatype": "string,array", "line_number": 52, "required": false, "name": "contentScript", "description": "The texts of content scripts to load.  Content scripts specified by this\noption are loaded *after* those specified by the `contentScriptFile` option.\nOptional."}, {"datatype": "function", "line_number": 56, "required": false, "name": "onMessage", "description": "Functions that will registered as a listener to a 'message' events."}, {"datatype": "function", "line_number": 58, "required": false, "name": "onError", "description": "Functions that will registered as a listener to an 'error' events."}], "description": "Options for the constructor, with the following keys:"}], "signature": "Worker(options)", "type": "constructor", "description": "Creates a content worker."}], "events": [{"arguments": [{"datatype": "value", "line_number": 103, "description": "The event listener is passed the message, which must be a\n<a href = \"dev-guide/addon-development/content-scripts/using-port.html#json_serializable\">JSON-serializable value</a>."}], "line_number": 96, "type": "event", "name": "message", "description": "This event allows the content worker to receive messages from its associated\ncontent scripts. Calling the `self.postMessage()` function from a content\nscript will asynchronously emit the `message` event on the corresponding\nworker.\n"}, {"arguments": [{"datatype": "Error", "line_number": 113, "description": "The event listener is passed a single argument which is an\n[Error](https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Error)\nobject."}], "line_number": 108, "type": "event", "name": "error", "description": "This event allows the content worker to react to an uncaught runtime script\nerror that occurs in one of the content scripts.\n"}, {"line_number": 119, "type": "event", "name": "detach", "description": "This event is emitted when the document associated with this worker is unloaded\nor the worker's `destroy()` method is called."}], "methods": [{"line_number": 71, "name": "postMessage", "params": [{"datatype": "number,string,JSON", "line_number": 75, "required": true, "name": "data", "description": "The data to send. Must be stringifiable to JSON."}], "signature": "postMessage(data)", "type": "method", "description": "Asynchronously emits `\"message\"` events in the enclosed worker, where content\nscript was loaded."}, {"line_number": 79, "signature": "destroy()", "type": "method", "name": "destroy", "description": "Destroy the worker by removing the content script from the page and removing\nall registered listeners. A `detach` event is fired just before removal."}], "type": "class", "properties": [{"datatype": "EventEmitter", "line_number": 62, "type": "property", "name": "port", "description": "[EventEmitter](packages/api-utils/docs/events.html) object that allows you to:\n\n* send customized messages to the worker using the `port.emit` function\n* receive events from the worker using the `port.on` function\n"}, {"datatype": "string", "line_number": 85, "type": "property", "name": "url", "description": "The URL of the content."}, {"datatype": "object", "line_number": 90, "type": "property", "name": "tab", "description": "If this worker is attached to a content document, returns the related \n[tab](packages/addon-kit/docs/tabs.html)."}], "description": "Worker is composed from the [EventEmitter][] trait, therefore instances\nof Worker and their descendants expose all the public properties\nexposed by [EventEmitter][] along with additional public properties that\nare listed below.\n\n**Example**\n\n    var workers = require(\"content/worker\");\n    let worker =  workers.Worker({\n      window: require(\"window-utils\").activeWindow,\n      contentScript:\n        \"self.port.on('hello', function(name) { \" +\n        \"  self.port.emit('response', window.location); \" +\n        \"});\"\n    });\n    worker.port.emit(\"hello\", { name: \"worker\"});\n    worker.port.on(\"response\", function (location) {\n      console.log(location);\n    });\n\n[EventEmitter]:packages/api-utils/docs/events.html\n\n\n\n\n\n\n\n\n\n"}], ["markdown", "\n\n"]]
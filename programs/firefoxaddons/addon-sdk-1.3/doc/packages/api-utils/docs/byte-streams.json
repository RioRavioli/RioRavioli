[["version", 4], ["markdown", "<!-- contributed by Drew Willcoxon [adw@mozilla.com]  -->\n<!-- edited by Noelle Murata [fiveinchpixie@gmail.com]  -->\n\nThe `byte-streams` module provides streams for reading and writing bytes.\n\n"], ["api-json", {"line_number": 6, "name": "ByteReader", "constructors": [{"line_number": 8, "name": "ByteReader", "params": [{"datatype": "stream", "line_number": 11, "required": true, "name": "inputStream", "description": "  The backing stream, an <a href=\"http://mxr.mozilla.org/mozilla-central/\nsource/xpcom/io/nsIInputStream.idl\"><code>nsIInputStream</code></a>."}], "signature": "ByteReader(inputStream)", "type": "constructor", "description": "Creates a binary input stream that reads bytes from a backing stream."}], "methods": [{"line_number": 20, "signature": "close()", "type": "method", "name": "close", "description": "Closes both the stream and its backing stream.  If the stream is already\nclosed, an exception is thrown."}, {"line_number": 26, "name": "read", "returns": {"datatype": "string", "line_number": 33, "description": "A string containing the bytes read.  If the stream is at the end, returns the\nempty string."}, "params": [{"datatype": "number", "line_number": 30, "required": false, "name": "numBytes", "description": "The number of bytes to read.  If not given, the remainder of the entire stream\nis read."}], "signature": "read(numBytes)", "type": "method", "description": "Reads a string from the stream.  If the stream is closed, an exception is\nthrown."}], "type": "class", "properties": [{"datatype": "boolean", "line_number": 15, "type": "property", "name": "closed", "description": "True if the stream is closed."}], "description": "\n"}], ["markdown", "\n\n"], ["api-json", {"line_number": 39, "name": "ByteWriter", "constructors": [{"line_number": 41, "name": "ByteWriter", "params": [{"datatype": "stream", "line_number": 44, "required": true, "name": "outputStream", "description": "  The backing stream, an <a href=\"http://mxr.mozilla.org/mozilla-central/\nsource/xpcom/io/nsIOutputStream.idl\"><code>nsIOutputStream</code></a>."}], "signature": "ByteWriter(outputStream)", "type": "constructor", "description": "Creates a binary output stream that writes bytes to a backing stream."}], "methods": [{"line_number": 52, "signature": "close()", "type": "method", "name": "close", "description": "Closes both the stream and its backing stream.  If the stream is already\nclosed, an exception is thrown."}, {"line_number": 57, "name": "write", "params": [{"datatype": "string", "line_number": 61, "required": true, "name": "str", "description": "The string to write."}], "signature": "write(str)", "type": "method", "description": "Writes a string to the stream.  If the stream is closed, an exception is\nthrown."}], "type": "class", "properties": [{"datatype": "boolean", "line_number": 48, "type": "property", "name": "closed", "description": "True if the stream is closed."}], "description": ""}], ["markdown", "\n"]]
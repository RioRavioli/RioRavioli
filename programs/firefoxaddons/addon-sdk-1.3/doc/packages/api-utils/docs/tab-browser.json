[["version", 4], ["markdown", "<!-- contributed by Dietrich Ayala [dietrich@mozilla.com]  -->\n\nThe `tab-browser` module is a low-level API that provides privileged\naccess to browser tab events and actions.\n\nIntroduction\n------------\n\nThe `tab-browser` module contains helpers for tracking tabbrowser elements\nand tabs, as well as a few utilities for actions such as opening a new\ntab, and catching all tab content loads.\n\nThis is a low-level API that has full privileges, and is intended to be used\nby SDK internal modules. If you just need easy access to tab events for your\nadd-on, use the Tabs module (JEP 110).\n\n"], ["api-json", {"datatype": "element", "line_number": 17, "type": "property", "name": "activeTab", "description": "The XUL tab element of the currently active tab."}], ["markdown", "\n\n"], ["api-json", {"line_number": 22, "name": "addTab", "returns": {"datatype": "element", "line_number": 44, "description": "The XUL tab element of the newly created tab.\n"}, "params": [{"datatype": "string", "line_number": 47, "required": true, "name": "URL", "description": "The URL to be opened in the new tab.\n"}, {"line_number": 50, "name": "options", "datatype": "object", "required": true, "props": [{"datatype": "boolean", "line_number": 53, "required": false, "name": "inNewWindow", "description": "An optional parameter whose key can be set in `options`.\nIf true, the tab is opened in a new window. Default is false.\n"}, {"datatype": "boolean", "line_number": 57, "required": false, "name": "inBackground", "description": "An optional parameter whose key can be set in `options`.\nIf true, the tab is opened adjacent to the active tab, but not\nswitched to. Default is false.\n"}, {"datatype": "function", "line_number": 62, "required": false, "name": "onLoad", "description": "An optional parameter whose key can be set in `options`.\nA callback function that is called once the tab has loaded.\nThe XUL element for the tab is passed as a parameter to\nthis function."}], "description": "Options for how and where to open the new tab.\n"}], "signature": "addTab(URL, options)", "type": "function", "description": "Adds a new tab.\n\n**Example**\n\n    var tabBrowser = require(\"tab-browser\");\n    tabBrowser.addTab(\"http://google.com\");\n\n    var tabBrowser = require(\"tab-browser\");\n    tabBrowser.addTab(\"http://google.com\", {\n      inBackground: true\n    });\n\n    var tabBrowser = require(\"tab-browser\");\n    tabBrowser.addTab(\"http://google.com\", {\n      inNewWindow: true,\n      onLoad: function(tab) {\n        console.log(\"tab is open.\");\n      }\n    });\n"}], ["markdown", "\n\n"], ["api-json", {"line_number": 69, "name": "Tracker", "params": [{"line_number": 90, "name": "delegate", "datatype": "object", "required": true, "props": [{"datatype": "function", "line_number": 94, "required": false, "name": "onTrack", "description": "Method of delegate that is called when a new tabbrowser starts to be tracked.\nThe tabbrowser element is passed as a parameter to this method.\n"}, {"datatype": "function", "line_number": 98, "required": false, "name": "onUntrack", "description": "Method of delegate that is called when a tabbrowser stops being tracked.\nThe tabbrowser element is passed as a parameter to this method."}], "description": "Delegate object to be notified each time a tabbrowser is created or destroyed.\nThe object should contain the following methods:\n"}], "signature": "Tracker(delegate)", "type": "function", "description": "Register a delegate object to be notified when tabbrowsers are created\nand destroyed.\n\nThe onTrack method will be called once per pre-existing tabbrowser, upon\ntracker registration.\n\n**Example**\n\n    var tabBrowser = require(\"tab-browser\");\n    let tracker = {\n      onTrack: function(tabbrowser) {\n        console.log(\"A new tabbrowser is being tracked.\");\n      },\n      onUntrack: function(tabbrowser) {\n        console.log(\"A tabbrowser is no longer being tracked.\");\n      }\n    };\n    tabBrowser.Tracker(tracker);\n"}], ["markdown", "\n\n"], ["api-json", {"line_number": 103, "name": "TabTracker", "params": [{"line_number": 124, "name": "delegate", "datatype": "object", "required": true, "props": [{"datatype": "function", "line_number": 128, "required": false, "name": "onTrack", "description": "Method of delegate that is called when a new tab starts to be tracked.\nThe tab element is passed as a parameter to this method.\n"}, {"datatype": "function", "line_number": 132, "required": false, "name": "onUntrack", "description": "Method of delegate that is called when a tab stops being tracked.\nThe tab element is passed as a parameter to this method."}], "description": "Delegate object to be notified each time a tab is opened or closed.\nThe object should contain the following methods:\n"}], "signature": "TabTracker(delegate)", "type": "function", "description": "Register a delegate object to be notified when tabs are opened and closed.\n\n\nThe onTrack method will be called once per pre-existing tab, upon\ntracker registration.\n\n**Example**\n\n    var tabBrowser = require(\"tab-browser\");\n    let tracker = {\n      onTrack: function(tab) {\n        console.log(\"A new tab is being tracked.\");\n      },\n      onUntrack: function(tab) {\n        console.log(\"A tab is no longer being tracked.\");\n      }\n    };\n    tabBrowser.TabTracker(tracker);\n"}], ["markdown", "\n\n"]]

<div id="collection_module_api_docs" class="module_api_docs">
<h1>collection</h1>
<div class="module_description"><!-- contributed by Drew Willcoxon [adw@mozilla.com]  -->
<!-- edited by Noelle Murata [fiveinchpixie@gmail.com]  -->

<p>The <code>collection</code> module provides a simple list-like class and utilities for
using it.  A collection is ordered, like an array, but its items are unique,
like a set.</p>
</div>

<div class="api_reference">
<h2 class="api_header">API Reference</h2>

<div class="api_component_group">
<h3 class="api_header">Classes</h3>

<div class="api_component">
<h4 class="api_name">Collection</h4>
<p>A collection object provides for...in-loop iteration.  Items are yielded in the
order they were added.  For example, the following code...</p>
<pre><code>var collection = require("collection");
var c = new collection.Collection();
c.add(1);
c.add(2);
c.add(3);
for (item in c)
  console.log(item);
</code></pre>
<p>... would print this to the console:</p>
<pre>
  1
  2
  3
</pre>

<p>Iteration proceeds over a copy of the collection made before iteration begins,
so it is safe to mutate the collection during iteration; doing so does not
affect the results of the iteration.</p>
<div class="api_component_group">
<h5 class="api_header">Constructors</h5>

<div class="api_component">
<h6 class="api_name">Collection(array)</h6>
<p>Creates a new collection.  The collection is backed by an array.</p>
<div class="parameter_set">
<div class="api_component">
<div class="api_name">[ array : <span class="datatype">array</span> ]</div>
<p>If <em>array</em> is given, it will be used as the backing array.  This way the caller
can fully control the collection.  Otherwise a new empty array will be used, and
no one but the collection will have access to it.</p>
</div>

</div>

</div>

</div>

<div class="api_component_group">
<h5 class="api_header">Methods</h5>

<div class="api_component">
<h6 class="api_name">add(itemOrItems)</h6>
<p>Adds a single item or an array of items to the collection.  Any items already
contained in the collection are ignored.</p>
<div class="parameter_set">
<div class="api_component">
<div class="api_name">itemOrItems : <span class="datatype">object</span></div>
<p>An item or array of items.</p>
</div>

</div>

<div class="returns">Returns: <span class="datatype">Collection</span><p>The Collection.</p>
</div>

</div>

<div class="api_component">
<h6 class="api_name">remove(itemOrItems)</h6>
<p>Removes a single item or an array of items from the collection.  Any items not
contained in the collection are ignored.</p>
<div class="parameter_set">
<div class="api_component">
<div class="api_name">itemOrItems : <span class="datatype">object</span></div>
<p>An item or array of items.</p>
</div>

</div>

<div class="returns">Returns: <span class="datatype">Collection</span><p>The Collection.</p>
</div>

</div>

</div>

<div class="api_component_group">
<h5 class="api_header">Properties</h5>

<div class="api_component">
<h6 class="api_name">length : <span class="datatype">number</span></h6>
<p>The number of items in the collection array.</p>
</div>

</div>

</div>

</div>

<div class="api_component_group">
<h3 class="api_header">Functions</h3>

<div class="api_component">
<h4 class="api_name">addCollectionProperty(object, propName, backingArray)</h4>
<p>Adds a collection property to the given object.  Setting the property to a
scalar value empties the collection and adds the value.  Setting it to an array
empties the collection and adds all the items in the array.</p>
<div class="parameter_set">
<div class="api_component">
<div class="api_name">object : <span class="datatype">object</span></div>
<p>The property will be defined on this object.</p>
</div>

<div class="api_component">
<div class="api_name">propName : <span class="datatype">string</span></div>
<p>The name of the property.</p>
</div>

<div class="api_component">
<div class="api_name">[ backingArray : <span class="datatype">array</span> ]</div>
<p>If given, this will be used as the collection's backing array.</p>
</div>

</div>

</div>

</div>

</div>

</div>

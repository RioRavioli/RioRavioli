[["version", 4], ["markdown", "<!-- contributed by Drew Willcoxon [adw@mozilla.com] -->\n\nThe `errors` module provides helpers for safely invoking user callbacks.\n\n"], ["api-json", {"line_number": 5, "name": "catchAndLog", "returns": {"datatype": "function", "line_number": 17, "description": "A function that will invoke `callback` when called.  The return value of this\nfunction is the return value of `callback` unless `callback` throws an\nexception.  In that case, `defaultResponse` is returned or `undefined` if\n`defaultResponse` is not given."}, "params": [{"datatype": "function", "line_number": 9, "required": true, "name": "callback", "description": "The callback to wrap."}, {"datatype": "value", "line_number": 11, "required": false, "name": "defaultResponse", "description": "This value will be returned by the wrapper if `callback` throws an exception.\nIf not given, `undefined` is used."}, {"datatype": "function", "line_number": 14, "required": false, "name": "logException", "description": "When `callback` throws an exception, it will be passed to this function.  If\nnot given, the exception is logged using `console.exception()`."}], "signature": "catchAndLog(callback, defaultResponse, logException)", "type": "function", "description": "Wraps a callback in a function that when invoked will catch and log any\nexception thrown by the callback."}], ["markdown", "\n\n"], ["api-json", {"line_number": 24, "name": "catchAndLogProps", "params": [{"datatype": "object", "line_number": 28, "required": true, "name": "object", "description": "The object whose methods to replace."}, {"datatype": "string,array", "line_number": 30, "required": true, "name": "props", "description": "The names of the methods of `object` to replace, either a string for a single\nmethod or an array of strings for multiple methods."}, {"datatype": "value", "line_number": 33, "required": false, "name": "defaultResponse", "description": "This value will be returned by any wrapper whose wrapped method throws an\nexception.  If not given, `undefined` is used."}, {"datatype": "function", "line_number": 36, "required": false, "name": "logException", "description": "See `catchAndLog()`."}], "signature": "catchAndLogProps(object, props, defaultResponse, logException)", "type": "function", "description": "Replaces methods of an object with wrapped versions of those methods returned\nby `catchAndLog()`."}], ["markdown", "\n"]]
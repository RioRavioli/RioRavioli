
<div id="hidden-frame_module_api_docs" class="module_api_docs">
<h1>hidden-frame</h1>
<div class="module_description"><!-- contributed by Myk Melez [myk@mozilla.org] -->

<p>The <code>hidden-frame</code> module creates host application frames (i.e. XUL <code>&lt;iframe&gt;</code>
elements) that are not displayed to the user.  It is useful in the construction
of APIs that load web content not intended to be directly seen or accessed
by users, like <code>page-worker</code>.  It is also useful in the construction of APIs
that load web content for intermittent display, such as <code>panel</code>.</p>
<p>This module is not intended to be used directly by programs.  Rather, it is
intended to be used by other modules that provide APIs to programs.</p>
<h2>Introduction</h2>
<p>The module exports a constructor function, <code>HiddenFrame</code>, and two other
functions, <code>add</code> and <code>remove</code>.</p>
<p><code>HiddenFrame</code> constructs a new hidden frame.  <code>add</code> registers a hidden frame,
preparing it to load content.  <code>remove</code> unregisters a frame, unloading any
content that was loaded in it.</p>
<h2>Examples</h2>
<p>The following code creates a hidden frame, loads a web page into it, and then
logs its title:</p>
<pre><code>var hiddenFrames = require("hidden-frame");
let hiddenFrame = hiddenFrames.add(hiddenFrames.HiddenFrame({
  onReady: function() {
    this.element.contentWindow.location = "http://www.mozilla.org/";
    let self = this;
    this.element.addEventListener("DOMContentLoaded", function() {
      console.log(self.element.contentDocument.title);
    }, true, true);
  }
}));
</code></pre>
<p>See the <code>panel</code> module for a real-world example of usage of this module.</p>
<h2>Reference</h2>
</div>

<div class="api_reference">
<h2 class="api_header">API Reference</h2>

<div class="api_component_group">
<h3 class="api_header">Classes</h3>

<div class="api_component">
<h4 class="api_name">HiddenFrame</h4>
<p><code>HiddenFrame</code> objects represent hidden frames.</p>
<div class="api_component_group">
<h5 class="api_header">Constructors</h5>

<div class="api_component">
<h6 class="api_name">HiddenFrame(options)</h6>
<p>Creates a hidden frame.</p>
<div class="parameter_set">
<div class="api_component">
<div class="api_name">options : <span class="datatype">object</span></div>
<p>Options for the frame, with the following keys:</p>
<div class="api_component">
<div class="api_name">onReady : <span class="datatype">function,array</span></div>
<p>Functions to call when the frame is ready to load content.  You must specify
an <code>onReady</code> callback and refrain from using the hidden frame until
the callback gets called, because hidden frames are not always ready to load
content the moment they are added.</p>
</div>

</div>

</div>

</div>

</div>

<div class="api_component_group">
<h5 class="api_header">Properties</h5>

<div class="api_component">
<h6 class="api_name">element : <span class="datatype">DOMElement</span></h6>
<p>The host application frame in which the page is loaded.</p>
</div>

<div class="api_component">
<h6 class="api_name">onReady : <span class="datatype">array</span></h6>
<p>Functions to call when the frame is ready to load content.</p>
</div>

</div>

</div>

</div>

</div>

</div>

[["version", 4], ["markdown", "<!-- contributed by Felipe Gomes [felipc@gmail.com]  -->\n\n\nThe `windows` module provides easy access to browser windows, their\ntabs, and open/close related functions and events.\n\nThis module currently only supports browser windows and does not provide\naccess to non-browser windows such as the Bookmarks Library, preferences\nor other non-browser windows created via add-ons.\n\n"], ["api-json", {"line_number": 11, "name": "browserWindows", "datatype": "List", "type": "property", "properties": [{"datatype": "BrowserWindow", "line_number": 42, "type": "property", "name": "activeWindow", "description": "\nThe currently active window. This property is read-only.\n\n**Example**\n\n    // get\n    var windows = require(\"windows\");\n    console.log(\"title of active window is \" +\n                windows.browserWindows.activeWindow.title);\n\n    anotherWindow.activate();\n    // set\n    windows.activeWindow == anotherWindow // true"}], "description": "An object that contains various properties and methods to access\nfunctionality from browser windows, such as opening new windows, accessing\ntheir tabs or switching the current active window.\n\n`browserWindows` provides access to all the currently open browser windows:\n\n    var windows = require(\"windows\");\n    for each (var window in windows.browserWindows) {\n      console.log(window.title);\n    }\n\n    console.log(windows.browserWindows.length);\n\nObject emits all the events listed under \"Events\" section.\n\n####Examples####\n\n    var windows = require(\"windows\").browserWindows;\n\n    // add a listener to the 'open' event\n    windows.on('open', function(window) {\n      myOpenWindows.push(window);\n    });\n\n    // add a listener to the 'close' event\n    windows.on('close', function(window) {\n      console.log(\"A window was closed.\");\n    });\n\n"}], ["markdown", "\n\n"], ["api-json", {"line_number": 61, "name": "open", "returns": {"datatype": "BrowserWindow", "line_number": 115, "description": ""}, "params": [{"line_number": 95, "name": "options", "datatype": "object", "required": true, "props": [{"datatype": "string", "line_number": 102, "required": true, "name": "url", "description": "String URL to be opened in the new window.\nThis is a required property.\n"}, {"datatype": "function", "line_number": 106, "required": false, "name": "onOpen", "description": "A callback function that is called when the window has opened. This does not\nmean that the URL content has loaded, only that the window itself is fully\nfunctional and its properties can be accessed. This is an optional property.\n"}, {"datatype": "function", "line_number": 111, "required": false, "name": "onClose", "description": "A callback function that is called when the window will be called.\nThis is an optional property.\n"}], "description": "An object containing configurable options for how this window will be opened,\nas well as a callback for being notified when the window has fully opened.\n\nIf the only option being used is `url`, then a bare string URL can be passed to\n`open` instead of specifying it as a property of the `options` object.\n"}], "signature": "open(options)", "type": "function", "description": "Open a new window.\n\n    var windows = require(\"windows\").browserWindows;\n\n    // Open a new window.\n    windows.open(\"http://www.example.com\");\n\n    // Open a new window and set a listener for \"open\" event.\n    windows.open({\n      url: \"http://www.example.com\",\n      onOpen: function(window) {\n        // do stuff like listen for content\n        // loading.\n      }\n    });\n\nReturns the window that was opened:\n\n    var widgets = require(\"widget\");\n    var windows = require(\"windows\").browserWindows;\n\n    var example = windows.open(\"http://www.example.com\");\n\n    var widget = widgets.Widget({\n      id: \"close-window\",\n      label: \"Close window\",\n      contentURL: \"http://www.mozilla.org/favicon.ico\",\n      onClick: function() {\n        example.close();\n      }\n    });\n"}], ["markdown", "\n\n"], ["api-json", {"line_number": 118, "methods": [{"line_number": 156, "signature": "activate()", "type": "method", "name": "activate", "description": "Makes window active, which will focus that window and bring it to the\nforeground."}, {"line_number": 162, "name": "close", "params": [{"datatype": "function", "line_number": 166, "required": false, "name": "callback", "description": "A function to be called when the window finishes its closing process.\nThis is an optional argument."}], "signature": "close(callback)", "type": "method", "description": "Close the window.\n"}], "description": "A `BrowserWindow` instance represents a single open window. They can be\nretrieved from the `browserWindows` property exported by this module.\n\n    var windows = require(\"windows\").browserWindows;\n\n    //Print how many tabs the current window has\n    console.log(\"The active window has \" +\n                windows.activeWindow.tabs.length +\n                \" tabs.\");\n\n    // Print the title of all browser windows\n    for each (var window in windows) {\n      console.log(window.title);\n    }\n\n    // close the active window\n    windows.activeWindow.close();\n\n    windows.activeWindow.close(function() {\n      console.log(\"The active window was closed\");\n    });\n\n\n\n\n", "type": "class", "properties": [{"datatype": "string", "line_number": 142, "type": "property", "name": "title", "description": "The current title of the window. Usually the title of the active tab,\nplus an app identifier.\nThis property is read-only."}, {"datatype": "TabList", "line_number": 149, "type": "property", "name": "tabs", "description": "A live list of tabs in this window. This object has the same interface as the\n[`tabs` API](packages/addon-kit/docs/tabs.html), except it contains only the\ntabs in this window, not all tabs in all windows. This property is read-only."}], "name": "BrowserWindow"}], ["markdown", "\n\n"], ["api-json", {"arguments": [{"datatype": "Window", "line_number": 178, "description": "Listeners are passed the `window` object that triggered the event."}], "line_number": 173, "type": "event", "name": "open", "description": "Event emitted when a new window is open.\nThis does not mean that the content has loaded, only that the browser window\nitself is fully visible to the user."}], ["markdown", "\n\n"], ["api-json", {"arguments": [{"datatype": "Window", "line_number": 185, "description": "Listeners are passed the `window` object that triggered the event."}], "line_number": 182, "type": "event", "name": "close", "description": "Event emitted when a window is closed."}], ["markdown", "\n"]]
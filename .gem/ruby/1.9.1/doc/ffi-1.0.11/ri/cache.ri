{:ancestors{ I"FFI::ManagedStruct:EF[I"FFI::Struct;FI"FFI::StrPtrConverter;F[I"Object;FI"FFI::PlatformError;F[I"LoadError;FI"FFI::StructLayoutBuilder;F[I"Object;FI"FFI::NotFoundError;F[I"LoadError;FI"FFI::StructLayout;F[I"Object;FI"FFI::StructLayout::Enum;F[I"
Field;FI"#FFI::StructLayout::InnerStruct;F[I"
Field;FI"FFI::StructLayout::Mapped;F[I"
Field;FI"FFI::Struct;F[I"Object;FI"(FFI::Struct::ManagedStructConverter;F[I"StructByReference;FI"FFI::Union;F[@	I"FFI::AutoPointer;F[I"Pointer;FI"FFI::AutoPointer::Releaser;F[I"Object;FI"&FFI::AutoPointer::DefaultReleaser;F[I"FFI::AutoPointer::Releaser;FI"'FFI::AutoPointer::CallableReleaser;F[@2I"FFI::Generator;F[I"Object;FI"FFI::TypesGenerator;F[I"Object;FI"FFI::ConstGenerator;F[I"Object;FI""FFI::ConstGenerator::Constant;F[I"Object;FI"FFI::StructGenerator;F[I"Object;FI" FFI::StructGenerator::Field;F[I"Object;FI"FFI::Generator::Task;F[I"Rake::TaskLib;FI"FFI::VariadicInvoker;F[I"Object;FI"FFI::Pointer;F[I"Object;FI"FFI::Enums;F[I"Object;FI"FFI::Enum;F[I"DataConverter;FI"Object;F:attributes{@[I"attr_reader alignment;FI"attr_reader size;FI"FFI::ConstGenerator;F[I"attr_reader constants;F@>[	I"attr_accessor value;FI"attr_reader cast;FI"attr_reader format;FI"attr_reader name;FI"FFI::StructGenerator;F[I"attr_accessor size;FI"attr_reader fields;F@D[	I"attr_accessor size;FI"attr_reader name;FI"attr_reader offset;FI"attr_reader type;FI"FFI::Enum;F[I"attr_reader tag;F:class_methods{I"FFI::ManagedStruct;F[I"new;FI"FFI::StrPtrConverter;F[I"from_native;F@[I"new;FI"FFI::NotFoundError;F[I"new;F@[I"new;FI"FFI::Struct;F[I"
align;FI"aligned;FI"alignment;FI"auto_ptr;FI"by_ref;FI"by_value;FI"callback;FI"enclosing_module;FI"find_field_type;FI"find_type;FI"in;FI"layout;FI"members;FI"offset_of;FI"offsets;FI"out;FI"	pack;FI"packed;FI"ptr;FI"	size;FI"
size=;FI"val;F@%[I"new;FI"FFI::Union;F[I"builder;FI"FFI::AutoPointer;F[I"from_native;FI"native_type;FI"new;F@-[I"new;FI"FFI::Generator;F[I"new;FI"FFI::TypesGenerator;F[I"generate;FI"FFI::ConstGenerator;F[I"new;FI"options;FI"options=;F@>[I"new;FI"FFI::StructGenerator;F[I"new;FI"options;FI"options=;F@D[I"new;FI"FFI::Generator::Task;F[I"new;FI"FFI::Pointer;F[I"	size;FI"FFI::Enums;F[I"new;FI"FFI::Enum;F[I"new;FI"FFI;F[I"add_typedef;FI"
errno;FI"errno=;FI"find_type;FI"map_library_name;FI"type_size;FI"typedef;FI"FFI::Platform;F[	I"	bsd?;FI"	mac?;FI"
unix?;FI"windows?;FI"FFI::IO;F[I"for_fd;FI"native_read;FI"FFI::Library;F[I"extended;F:encodingIu:Encoding
UTF-8;F:instance_methods{@[I"add;FI"add_array;FI"add_field;FI"add_struct;FI"alignment;FI"alignment=;FI"
build;FI"packed=;FI"	size;FI"
size=;FI"union=;FI"union?;FI"FFI::StructLayout;F[I"offset_of;FI"offsets;FI"FFI::StructLayout::Enum;F[I"get;FI"put;F@[I"get;F@[I"get;FI"put;FI"FFI::Struct;F[I"
align;FI"alignment;FI"
clear;FI"members;FI"offset_of;FI"offsets;FI"	size;FI"to_ptr;FI"values;F@%[I"from_native;FI"FFI::AutoPointer;F[I"autorelease=;FI"	free;F@-[I"autorelease=;FI"	call;FI"	free;F@0[I"release;F@3[I"release;FI"FFI::Generator;F[I"constants;FI"struct;FI"	to_s;FI"FFI::ConstGenerator;F[I"[];FI"calculate;FI"
const;FI"constants;FI"dump_constants;FI"include;FI"to_ruby;F@>[I"	cast;FI"converted_value;FI"format;FI"	name;FI"ruby_name;FI"to_ruby;FI"
value;FI"FFI::StructGenerator;F[I"calculate;FI"dump_config;FI"
field;FI"fields;FI"found?;FI"generate_layout;FI"get_field;FI"include;FI"	name;FI"	size;F@D[I"	name;FI"offset;FI"offset=;FI"	size;FI"to_config;FI"	type;FI"FFI::VariadicInvoker;F[I"attach;FI"	call;FI"	init;FI"FFI::Pointer;F[I"read_array_of_type;FI"read_string;FI"read_string_length;FI"read_string_to_null;FI"write_array_of_type;FI"write_string;FI"write_string_length;FI"FFI::Enums;F[I"<<;FI"__map_symbol;FI"	find;FI"FFI::Enum;F[I"[];FI"	find;FI"from_native;FI"native_type;FI"symbol_map;FI"symbols;FI"tag;FI"	to_h;FI"to_hash;FI"to_native;FI"FFI::Library;F[I"attach_function;FI"attach_variable;FI"callback;FI"	enum;FI"enum_type;FI"enum_value;FI"ffi_convention;FI"ffi_lib;FI"ffi_lib_flags;FI"ffi_libraries;FI"find_type;FI"function_names;FI"typedef;F:modules[$I"FFI;FI"FFI::AutoPointer;FI"'FFI::AutoPointer::CallableReleaser;FI"&FFI::AutoPointer::DefaultReleaser;F@2I"FFI::ConstGenerator;FI""FFI::ConstGenerator::Constant;FI"FFI::Enum;FI"FFI::Enums;FI"FFI::Generator;FI"FFI::Generator::Task;FI"FFI::IO;FI"FFI::Library;FI"FFI::ManagedStruct;FI"FFI::NotFoundError;FI"FFI::Platform;FI"FFI::PlatformError;FI"FFI::Pointer;FI"FFI::StrPtrConverter;F@	I"(FFI::Struct::ManagedStructConverter;FI"FFI::StructGenerator;FI" FFI::StructGenerator::Field;FI"FFI::StructLayout;FI"FFI::StructLayout::Enum;FI"#FFI::StructLayout::InnerStruct;FI"FFI::StructLayout::Mapped;FI"FFI::StructLayoutBuilder;FI"FFI::TypesGenerator;FI"FFI::Union;FI"FFI::VariadicInvoker;F